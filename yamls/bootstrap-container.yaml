---
command:
- /bin/bash
- -c
- |
  set -e -o pipefail

  # Always required:
  #   DB_TYPE: "NB" or "SB"
  #   ADDRESS: local address of server
  #
  # For bootstrap:
  #   BOOTSTRAP: "true"
  #
  # For scale up:
  #   CID: cluster ID of previously initialised cluster database
  #   REMOTES: Space-separated list of remote server addresses

  if [ "${DB_TYPE}" == "NB" ]; then
    db="${OVS_DBDIR}/ovnnb_db.db"
    db_name="OVN_Northbound"
    schema="/usr/share/openvswitch/ovn-nb.ovsschema"
  elif [ "${DB_TYPE}" == "SB" ]; then
    db="${OVS_DBDIR}/ovnsb_db.db"
    db_name="OVN_Southbound"
    schema="/usr/share/openvswitch/ovn-sb.ovsschema"
  else
    echo "Unknown DB_TYPE: ${DB_TYPE}" >&2
    exit 1
  fi

  if [ ! -f "$db" ]; then
      if [ "$BOOTSTRAP" == "true" ]; then
          ovsdb-tool create-cluster "$db" "$schema" "$ADDRESS"
      else
          ovsdb-tool join-cluster --cid="$CID" \
              "$db" "$db_name" "$ADDRESS" $REMOTES
      fi
  fi

  cid=$(ovsdb-tool db-cid "$db")
  name=$(ovsdb-tool db-name "$db")
  sid=$(ovsdb-tool db-sid "$db")
  address=$(ovsdb-tool db-local-address "$db")

  jq -n --arg cid "$cid" \
        --arg name "$name" \
        --arg sid "$sid" \
        --arg address "$address" \
        '{"clusterID": $cid, "name": $name, "serverID": $sid, "address": $address}'
env:
- name: OVS_DBDIR
  value: /var/lib/openvswitch
- name: BOOTSTRAP
  value: true
volumeMounts:
- mountPath: /var/lib/openvswitch/
  name: data
resources:
  requests:
    cpu: 10m
    memory: 300Mi
terminationMessagePolicy: FallbackToLogsOnError
